{"version":3,"sources":["App.js","index.js"],"names":["App","state","quote","author","fetchQuote","bind","fetch","then","data","json","quotesArray","newQuote","quotes","Math","floor","random","setState","catch","error","console","log","colorArray","randomBackgroundColor","backgroundColor","color","className","style","id","aria-hidden","this","href","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOA4EeA,G,wDAxEX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,MAAO,2CACPC,OAAQ,cAEZ,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBANR,E,yDASA,IAAD,OACTC,MACI,0IAECC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACH,IAAMC,EACFD,EAAYE,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,WACvC,EAAKC,SAAS,CACVd,MAAOS,EAAQ,MACfR,OAAQQ,EAAQ,YAGvBM,OAAM,SAACC,GACJC,QAAQC,IAAIF,Q,+BAKpB,IAAMG,EAAa,CACf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGEC,EAAwB,CAC1BC,gBAAiBF,EAAWR,KAAKC,MAAsB,EAAhBD,KAAKE,WAC5CS,MAAOH,EAAWR,KAAKC,MAAsB,EAAhBD,KAAKE,YAGtC,OACI,yBAAKU,UAAU,YAAYC,MAAOJ,GAC9B,yBAAKK,GAAG,aACJ,yBAAKA,GAAG,QACJ,uBACIF,UAAU,yBACVG,cAAY,SAEfC,KAAK5B,MAAMC,OAEhB,yBAAKyB,GAAG,UAAUE,KAAK5B,MAAME,QAC7B,yBAAKsB,UAAU,kBACX,uBAAGK,KAAK,2BAA2BH,GAAG,eAClC,uBACIF,UAAU,sBACVG,cAAY,UAGpB,4BAAQD,GAAG,YAAYI,QAASF,KAAKzB,YAArC,oB,GA/DN4B,IAAMC,YCCxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.a790b86c.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            quote: 'If you can dream it, you can achieve it.',\n            author: 'Zig Ziglar',\n        };\n        this.fetchQuote = this.fetchQuote.bind(this);\n    }\n\n    fetchQuote() {\n        fetch(\n            'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json'\n        )\n            .then((data) => data.json())\n            .then((quotesArray) => {\n                const newQuote =\n                    quotesArray.quotes[Math.floor(Math.random() * 101)];\n                this.setState({\n                    quote: newQuote['quote'],\n                    author: newQuote['author'],\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n    render() {\n        const colorArray = [\n            '#3d0707',\n            '#b84f0f',\n            '#45470b',\n            '#11470b',\n            '#0f403a',\n            '#0f1f33',\n            '#410e47',\n            '#470e2d',\n        ];\n\n        const randomBackgroundColor = {\n            backgroundColor: colorArray[Math.floor(Math.random() * 8)],\n            color: colorArray[Math.floor(Math.random() * 8)],\n        };\n\n        return (\n            <div className='container' style={randomBackgroundColor}>\n                <div id='quote-box'>\n                    <div id='text'>\n                        <i\n                            className='fa fa-quote-left fa-2x'\n                            aria-hidden='true'\n                        ></i>\n                        {this.state.quote}\n                    </div>\n                    <div id='author'>{this.state.author}</div>\n                    <div className='flex-container'>\n                        <a href='twitter.com/intent/tweet' id='tweet-quote'>\n                            <i\n                                className='fa fa-twitter fa-2x'\n                                aria-hidden='true'\n                            ></i>\n                        </a>\n                        <button id='new-quote' onClick={this.fetchQuote}>\n                            New Quote\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}